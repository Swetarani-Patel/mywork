{"ast":null,"code":"export const SchemaTypes = {\n  string: (required = false, message) => ({\n    type: \"string\",\n    required,\n    message\n  }),\n  number: (required = false, message) => ({\n    type: \"number\",\n    required,\n    message\n  }),\n  boolean: (required = false, message) => ({\n    type: \"boolean\",\n    required,\n    message\n  })\n};\nconst validateData = (schema, data) => {\n  const errors = [];\n  Object.keys(data).forEach(key => {\n    const schemaTypes = schema[key];\n    const type = schemaT;\n    let value = data[key];\n    try {\n      value = JSON.parse(value);\n    } catch (error) {\n      value = value;\n    }\n    if (typeof value !== type) {\n      errors.push({\n        [key]: `Expected ${type} for ${key} but received ${typeof value}`\n      });\n    }\n  });\n};","map":{"version":3,"names":["SchemaTypes","string","required","message","type","number","boolean","validateData","schema","data","errors","Object","keys","forEach","key","schemaTypes","schemaT","value","JSON","parse","error","push"],"sources":["/Users/sweta/Desktop/googleform/frontend/src/utils.js"],"sourcesContent":["export const SchemaTypes = {\n  string: (required = false, message) => ({\n    type: \"string\",\n    required,\n    message,\n  }),\n  number: (required = false, message) => ({\n    type: \"number\",\n    required,\n    message,\n  }),\n  boolean: (required = false, message) => ({\n    type: \"boolean\",\n    required,\n    message,\n  }),\n};\n\nconst validateData = (schema, data) => {\n  const errors = [];\n  Object.keys(data).forEach((key) => {\n    const schemaTypes = schema[key];\n    const type = schemaT\n\n    let value = data[key];\n\n    try {\n      value = JSON.parse(value);\n    } catch (error) {\n      value = value;\n    }\n\n    if (typeof value !== type) {\n      errors.push({\n        [key]: `Expected ${type} for ${key} but received ${typeof value}`,\n      });\n    }\n  });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;EACzBC,MAAM,EAAEA,CAACC,QAAQ,GAAG,KAAK,EAAEC,OAAO,MAAM;IACtCC,IAAI,EAAE,QAAQ;IACdF,QAAQ;IACRC;EACF,CAAC,CAAC;EACFE,MAAM,EAAEA,CAACH,QAAQ,GAAG,KAAK,EAAEC,OAAO,MAAM;IACtCC,IAAI,EAAE,QAAQ;IACdF,QAAQ;IACRC;EACF,CAAC,CAAC;EACFG,OAAO,EAAEA,CAACJ,QAAQ,GAAG,KAAK,EAAEC,OAAO,MAAM;IACvCC,IAAI,EAAE,SAAS;IACfF,QAAQ;IACRC;EACF,CAAC;AACH,CAAC;AAED,MAAMI,YAAY,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;EACrC,MAAMC,MAAM,GAAG,EAAE;EACjBC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAAEC,GAAG,IAAK;IACjC,MAAMC,WAAW,GAAGP,MAAM,CAACM,GAAG,CAAC;IAC/B,MAAMV,IAAI,GAAGY,OAAO;IAEpB,IAAIC,KAAK,GAAGR,IAAI,CAACK,GAAG,CAAC;IAErB,IAAI;MACFG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdH,KAAK,GAAGA,KAAK;IACf;IAEA,IAAI,OAAOA,KAAK,KAAKb,IAAI,EAAE;MACzBM,MAAM,CAACW,IAAI,CAAC;QACV,CAACP,GAAG,GAAI,YAAWV,IAAK,QAAOU,GAAI,iBAAgB,OAAOG,KAAM;MAClE,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}