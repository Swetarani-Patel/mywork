{"ast":null,"code":"var _s = $RefreshSig$();\nexport const useForm = (schema, data) => {\n  _s();\n  const [form, setForm] = useState({});\n  const combinedForm = {\n    ...data,\n    ...form\n  };\n  const register = name => {\n    const value = combinedForm[name];\n    const clearForm = () => {\n      setForm({});\n    };\n    const onBlur = () => {\n      setForm(prevState => ({\n        [name]: data[name],\n        ...prevState\n      }));\n    };\n    const onChange = value => {\n      setForm(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    };\n    return {\n      name,\n      onChange,\n      onBlur,\n      value,\n      errors: validateData(schema, form)\n    };\n  };\n  const format = () => formatData(schema, form);\n  const handleSubmit = onSubmit => e => {\n    e.preventDefault();\n    const errorsMap = validateData(schema, combinedForm);\n    const errorsList = Object.keys(errorsMap).length;\n    if (errorsList) {\n      setForm(combinedForm);\n    } else {\n      onSubmit(format());\n    }\n  };\n  const clearform = () => {\n    setForm({});\n  };\n  return {\n    register,\n    handleSubmit,\n    clearform // Define clearform here\n  };\n};\n_s(useForm, \"vOzvWZDsoCRExenMJTZow4WC08Q=\");","map":{"version":3,"names":["useForm","schema","data","_s","form","setForm","useState","combinedForm","register","name","value","clearForm","onBlur","prevState","onChange","errors","validateData","format","formatData","handleSubmit","onSubmit","e","preventDefault","errorsMap","errorsList","Object","keys","length","clearform"],"sources":["/Users/sweta/Desktop/googleform/frontend/src/utils.js"],"sourcesContent":["export const useForm = (schema, data) => {\n  const [form, setForm] = useState({});\n  const combinedForm = { ...data, ...form };\n\n  const register = (name) => {\n    const value = combinedForm[name];\n\n    const clearForm = () => {\n      setForm({});\n    };\n\n    const onBlur = () => {\n      setForm((prevState) => ({ [name]: data[name], ...prevState }));\n    };\n\n    const onChange = (value) => {\n      setForm((prevState) => ({ ...prevState, [name]: value }));\n    };\n\n    return {\n      name,\n      onChange,\n      onBlur,\n      value,\n      errors: validateData(schema, form),\n    };\n  };\n\n  const format = () => formatData(schema, form);\n\n  const handleSubmit = (onSubmit) => (e) => {\n    e.preventDefault();\n    const errorsMap = validateData(schema, combinedForm);\n    const errorsList = Object.keys(errorsMap).length;\n\n    if (errorsList) {\n      setForm(combinedForm);\n    } else {\n      onSubmit(format());\n    }\n  };\n\n  const clearform = () => {\n    setForm({});\n  };\n\n  return {\n    register,\n    handleSubmit,\n    clearform, // Define clearform here\n  };\n};\n"],"mappings":";AAAA,OAAO,MAAMA,OAAO,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMC,YAAY,GAAG;IAAE,GAAGL,IAAI;IAAE,GAAGE;EAAK,CAAC;EAEzC,MAAMI,QAAQ,GAAIC,IAAI,IAAK;IACzB,MAAMC,KAAK,GAAGH,YAAY,CAACE,IAAI,CAAC;IAEhC,MAAME,SAAS,GAAGA,CAAA,KAAM;MACtBN,OAAO,CAAC,CAAC,CAAC,CAAC;IACb,CAAC;IAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;MACnBP,OAAO,CAAEQ,SAAS,KAAM;QAAE,CAACJ,IAAI,GAAGP,IAAI,CAACO,IAAI,CAAC;QAAE,GAAGI;MAAU,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,MAAMC,QAAQ,GAAIJ,KAAK,IAAK;MAC1BL,OAAO,CAAEQ,SAAS,KAAM;QAAE,GAAGA,SAAS;QAAE,CAACJ,IAAI,GAAGC;MAAM,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,OAAO;MACLD,IAAI;MACJK,QAAQ;MACRF,MAAM;MACNF,KAAK;MACLK,MAAM,EAAEC,YAAY,CAACf,MAAM,EAAEG,IAAI;IACnC,CAAC;EACH,CAAC;EAED,MAAMa,MAAM,GAAGA,CAAA,KAAMC,UAAU,CAACjB,MAAM,EAAEG,IAAI,CAAC;EAE7C,MAAMe,YAAY,GAAIC,QAAQ,IAAMC,CAAC,IAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,SAAS,GAAGP,YAAY,CAACf,MAAM,EAAEM,YAAY,CAAC;IACpD,MAAMiB,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,MAAM;IAEhD,IAAIH,UAAU,EAAE;MACdnB,OAAO,CAACE,YAAY,CAAC;IACvB,CAAC,MAAM;MACLa,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;EAED,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtBvB,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC;EAED,OAAO;IACLG,QAAQ;IACRW,YAAY;IACZS,SAAS,CAAE;EACb,CAAC;AACH,CAAC;AAACzB,EAAA,CAnDWH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}